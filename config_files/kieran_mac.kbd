;; See keymap/tutorial.kbd for a more complete tutorial

(defcfg
  output(kext)  
  fallthrough true
  input (iokit-name "Apple Internal Keyboard / Trackpad") 

)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft up
  fn   lctl lalt lmet           spc            rmet ralt left down rght
)

;; Below, I use `around' to compose `layer-toggle' with `fn' (instead
;; of using `layer-toggle' directly) so that the `fn' keypress
;; actually gets emitted. This matters when using an application that
;; can use `fn' as a modifier (like Emacs).

(defalias fn (around (layer-toggle function) fn))
(defalias spcsym (tap-hold 401 spc (layer-toggle symbol)))
(defalias enumpad (tap-hold 401 e (layer-toggle numpad)))

;; -- Home row mods --
(defalias hshift (tap-hold 401 h lsft))      ;; Shift on H
(defalias nshift (tap-hold 401 n rsft))      ;; Shift on ;

(defalias tcmd (tap-hold 401 t lmet))      ;; Cmd on T
(defalias acmd (tap-hold 401 a rmet))      ;; Cmd on A

(defalias salt (tap-hold 401 s lalt))      ;; Alt on S 
(defalias oalt (tap-hold 401 o ralt))      ;; Alt on O

(defalias rrctl (tap-hold 401 r lctl))      ;; Ctl on R
(defalias ictl (tap-hold 401 i rctl))      ;; Ctl on I

(deflayer default
  _       brdn brup lp   mctl bldn blup prev pp   next mute vold volu
  _       #         `         ~         -         \         |         !         @         *         _         _         _         _  
  _       x         c         d         f         b         q         l         u         '         :         _         _         _  
  _       @rrctl    @salt     @tcmd     @hshift   k         j         @nshift   @acmd     @oalt     @ictl     _         _  
  _       w         g         m         p         v         z         ,         .         /         y         _         _  
  @fn     _        \_         @spcsym                 bspc                      @enumpad       =         _         _         _  
)

(deflayer symbol
  _       brdn brup lp   mctl bldn blup prev pp   next mute vold volu
  _       #         `         ~         -         \         |         !         @         *         _         _         _         _  
  _       x         c         d         f         b         `         #         {         }         !         _         _         _  
  _       @rrctl    @salt     @tcmd     @hshift   k         ~         $        \(        \)         &         _         _
  _       w         g         m         p         v         -         %         [         ]         |         _         _
  @fn     _         \_        spc                               bspc                      e       =         _         _         _  
)

(deflayer numpad
  _       brdn brup lp   mctl bldn blup prev pp   next mute vold volu
  _       #         `         ~         -         \         |         !         @         *         _         _         _         _  
  _       x         7         8         9         b         q         l         u         '         :         _         _         _  
  _       @rrctl    4         5         6         k         j         @nshift   @acmd     @oalt     @ictl     _         _  
  _       w         1         2         3         v         z         ,         .         /         y         _         _  
  @fn     _        \_         0                 bspc                        e       =         _         _         _  
)

(deflayer function
  _    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _    _    _    _
)
